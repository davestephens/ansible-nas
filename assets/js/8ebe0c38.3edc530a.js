"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[8416],{9269:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=t(5893),a=t(1151);const r={title:"Threadfin"},s=void 0,o={id:"applications/media-serving/threadfin",title:"Threadfin",description:"Homepage//github.com/Threadfin/Threadfin",source:"@site/docs/applications/media-serving/threadfin.md",sourceDirName:"applications/media-serving",slug:"/applications/media-serving/threadfin",permalink:"/docs/applications/media-serving/threadfin",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/media-serving/threadfin.md",tags:[],version:"current",frontMatter:{title:"Threadfin"},sidebar:"tutorialSidebar",previous:{title:"Tautulli",permalink:"/docs/applications/media-serving/tautulli"},next:{title:"Ubooquity",permalink:"/docs/applications/media-serving/ubooquity"}},c={},d=[{value:"Usage",id:"usage",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Homepage: ",(0,i.jsx)(n.a,{href:"https://github.com/Threadfin/Threadfin",children:"https://github.com/Threadfin/Threadfin"})]}),"\n",(0,i.jsxs)(n.p,{children:["Documentation: ",(0,i.jsx)(n.a,{href:"https://github.com/xteve-project/xTeVe-Documentation/blob/master/en/configuration.md",children:"https://github.com/xteve-project/xTeVe-Documentation/blob/master/en/configuration.md"})]}),"\n",(0,i.jsxs)(n.p,{children:["Docker Image: ",(0,i.jsx)(n.a,{href:"https://hub.docker.com/r/fyb3roptik/threadfin",children:"https://hub.docker.com/r/fyb3roptik/threadfin"})]}),"\n",(0,i.jsx)(n.p,{children:"Threadfin is a M3U proxy server for Plex, Emby, Jellyfin and any client and provider which supports the .TS and .M3U8 (HLS) streaming formats."}),"\n",(0,i.jsx)(n.p,{children:"Threadfin emulates a SiliconDust HDHomeRun OTA tuner, which allows it to expose IPTV style channels to software, which would not normally support it."}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.code,{children:"threadfin_enabled: true"})," in your ",(0,i.jsx)(n.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,i.jsxs)(n.p,{children:["Access the webui at ",(0,i.jsx)(n.a,{href:"http://ansible_nas_host_or_ip:34400/web",children:"http://ansible_nas_host_or_ip:34400/web"})," by default. See specific configuration section below for information on setting up external access."]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>s});var i=t(7294);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);