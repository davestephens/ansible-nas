"use strict";(self.webpackChunkansible_nas=self.webpackChunkansible_nas||[]).push([[7799],{2744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=t(5893),r=t(1151);const a={title:"Bitwarden(_rs)"},o=void 0,s={id:"applications/other/bitwarden",title:"Bitwarden(_rs)",description:"Homepage//github.com/dani-garcia/bitwardenrs",source:"@site/docs/applications/other/bitwarden.md",sourceDirName:"applications/other",slug:"/applications/other/bitwarden",permalink:"/docs/applications/other/bitwarden",draft:!1,unlisted:!1,editUrl:"https://github.com/davestephens/ansible-nas/tree/main/website/docs/applications/other/bitwarden.md",tags:[],version:"current",frontMatter:{title:"Bitwarden(_rs)"},sidebar:"tutorialSidebar",previous:{title:"Other",permalink:"/docs/category/other"},next:{title:"CouchDB",permalink:"/docs/applications/other/couchdb"}},c={},d=[{value:"Usage",id:"usage",level:2},{value:"Specific Configuration",id:"specific-configuration",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Homepage: ",(0,i.jsx)(n.a,{href:"https://github.com/dani-garcia/bitwarden_rs",children:"https://github.com/dani-garcia/bitwarden_rs"})]}),"\n",(0,i.jsxs)(n.p,{children:["Bitwarden: ",(0,i.jsx)(n.a,{href:"https://bitwarden.com/",children:"https://bitwarden.com/"})]}),"\n",(0,i.jsx)(n.p,{children:"This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal."}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.code,{children:"bitwarden_enabled: true"})," in your ",(0,i.jsx)(n.code,{children:"inventories/<your_inventory>/group_vars/nas.yml"})," file."]}),"\n",(0,i.jsx)(n.h2,{id:"specific-configuration",children:"Specific Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Make sure you set your admin token! It is ",(0,i.jsx)(n.code,{children:"bitwarden_admin_token"})," in ",(0,i.jsx)(n.code,{children:"group_vars/all.yml"})," file. The string you put here will be the login to the admin section of your Bitwarden installation (",(0,i.jsx)(n.a,{href:"https://bitwarden.ansiblenasdomain.tld/admin",children:"https://bitwarden.ansiblenasdomain.tld/admin"}),"). This token can be anything, but it's recommended to use a long, randomly generated string of characters, for example running:\n",(0,i.jsx)(n.code,{children:"openssl rand -base64 48"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To create a user, you need to set ",(0,i.jsx)(n.code,{children:"bitwarden_allow_signups"})," to ",(0,i.jsx)(n.code,{children:"true"})," in your ",(0,i.jsx)(n.code,{children:"all.yml"}),", and re-run the playbook to reprovision the container. Once you've created your users, set ",(0,i.jsx)(n.code,{children:"bitwarden_allow_signups"})," back to ",(0,i.jsx)(n.code,{children:"false"})," and run again."]}),"\n",(0,i.jsxs)(n.p,{children:["For speed you can target just Bitwarden by appending ",(0,i.jsx)(n.code,{children:"-t bitwarden"})," to your ",(0,i.jsx)(n.code,{children:"ansible-playbook"})," command."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>o});var i=t(7294);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);