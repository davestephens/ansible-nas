---
- name: Start Flame
  block:
    - name: Create Flame Directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ flame_data_directory }}"

    - name: Flame Docker Container
      community.docker.docker_container:
        name: "{{ flame_container_name }}"
        image: "{{ flame_image }}:{{ flame_tag }}"
        pull: true
        volumes:
          - "{{ flame_data_directory }}:/app/data"
          - "/var/run/docker.sock:/var/run/docker.sock"
        ports:
          - "{{ flame_port }}:5005"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ flame_user_id }}"
          PGID: "{{ flame_group_id }}"
        labels:
          traefik.enable: "{{ flame_available_externally | string }}"
          traefik.http.routers.flame.rule: "Host(`{{ flame_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.flame.tls.certresolver: "letsencrypt"
          traefik.http.routers.flame.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.flame.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.flame.loadbalancer.server.port: "5005"
        restart_policy: unless-stopped
        memory: "{{ flame_memory }}"
  when: flame_enabled is true

- name: Stop flame
  block:
    - name: Stop Flame
      community.docker.docker_container:
        name: "{{ flame_container_name }}"
        state: absent

  when: flame_enabled is false
