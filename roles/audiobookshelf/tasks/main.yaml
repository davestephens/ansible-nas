- name: Start Audiobookshelf
  block:
    - name: Create Audiobookshelf Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ audiobookshelf_config_directory }}"
        - "{{ audiobookshelf_metadata_directory }}"

    - name: Create Audiobookshelf Docker Container
      community.docker.docker_container:
        name: "{{ audiobookshelf_container_name }}"
        image: "{{ audiobookshelf_image_name }}:{{ audiobookshelf_image_version }}"
        pull: true
        volumes:
          - "{{ audiobookshelf_config_directory }}:/config:rw"
          - "{{ audiobookshelf_metadata_directory }}:/metadata:rw"
          - "{{ audiobookshelf_podcasts_directory }}:/podcasts:{{ audiobookshelf_podcasts_permissions }}"
          - "{{ audiobookshelf_audiobooks_directory }}:/audiobooks:{{ audiobookshelf_audiobooks_permissions }}"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ audiobookshelf_user_id }}"
          PGID: "{{ audiobookshelf_group_id }}"
          VERSION: "{{ audiobookshelf_version }}"
        restart_policy: unless-stopped
        memory: "{{ audiobookshelf_memory }}"
        labels:
          traefik.enable: "{{ audiobookshelf_available_externally | string }}"
          traefik.http.routers.audiobookshelf.rule: "Host(`{{ audiobookshelf_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.audiobookshelf.tls.certresolver: "letsencrypt"
          traefik.http.routers.audiobookshelf.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.audiobookshelf.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.audiobookshelf.loadbalancer.server.port: "13378"
          homepage.group: Media
          homepage.name: Audiobookshelf
          homepage.icon: audiobookshelf
          homepage.href: http://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:13378
          homepage.description: Media server
  when: audiobookshelf_enabled is true

- name: Stop Audiobookshelf
  block:
    - name: Stop Audiobookshelf
      community.docker.docker_container:
        name: "{{ audiobookshelf_container_name }}"
        state: absent
  when: audiobookshelf_enabled is false
