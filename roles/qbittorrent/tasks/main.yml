---
- name: Create qBittorrent Directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ qbittorrent_data_directory }}"
    - "{{ qbittorrent_data_directory }}/config"
    - "{{ qbittorrent_download_directory }}"

- name: Create qBittorrent Docker Container
  docker_container:
    name: qbittorrent
    image: linuxserver/qbittorrent:latest
    pull: true
    volumes:
      - "{{ qbittorrent_data_directory }}/config:/config:rw"
      - "{{ qbittorrent_download_directory }}:/downloads:rw"
      - "{{ torrents_root }}:/torrents:rw"
    ports:
      - "{{ qbittorrent_port_http }}:{{ qbittorrent_port_http }}"
      - "{{ qbittorrent_port_bt }}:6881"
      - "{{ qbittorrent_port_bt }}:6881/udp"
    env:
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ qbittorrent_user_id }}"
      PGID: "{{ qbittorrent_group_id }}"
      UMASK_SET: "{{ qbittorrent_umask }}"
      WEBUI_PORT: "{{ qbittorrent_port_http }}"
    restart_policy: unless-stopped
    memory: "{{ qbittorrent_memory }}"
    labels:
      traefik.enable: "{{ qbittorrent_available_externally | string }}"
      traefik.http.routers.qbittorrent.rule: "Host(`{{ qbittorrent_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.qbittorrent.tls.certresolver: "letsencrypt"
      traefik.http.routers.qbittorrent.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.qbittorrent.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.qbittorrent.loadbalancer.server.port: "{{ qbittorrent_port_http }}"
